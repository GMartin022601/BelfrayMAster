<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>