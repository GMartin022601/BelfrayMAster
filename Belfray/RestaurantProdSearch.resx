<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>